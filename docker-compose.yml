services:
  web:
    build: ./backend
    container_name: lastmile_backend
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend:/app
      - ./backend/media:/app/media
      - ./backend/staticfiles:/app/staticfiles
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    container_name: lastmile_postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  redis:
    image: redis:7
    container_name: lastmile_redis
    restart: always
    expose:
      - "6379"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: lastmile_frontend
    stdin_open: true
    tty: true
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    volumes:
      - ./frontend:/usr/src/app
    expose:
      - "3000"
    depends_on:
      - web

  nginx:
    image: nginx:1.25-alpine
    container_name: lastmile_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/media:/app/media
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - web
      - frontend

  certbot:
    image: certbot/certbot
    container_name: lastmile_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done"

volumes:
  postgres_data:
